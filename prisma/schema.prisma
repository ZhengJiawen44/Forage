generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Admin
  User
}

model User {
  id Int @id @default(autoincrement())
  name String 
  role Role @default(User)
  email String @unique
  emailVerified Boolean @default(false)
  about String?
  password String
  createdAt DateTime @default(now())
  historyEnabled Boolean @default(true)
  blogs Blog[]
  history History[]
}

model Blog {
  id Int @id @default(autoincrement())
  title String 
  description String?
  content String
  length Int
  thumbnail String?
  createdAt DateTime @default(now())
  author User @relation(fields:[authorID], references: [id]) 
  authorID Int
  views Int @default(0)        // Keep these as running totals
  reads Int @default(0)        // Keep these as running totals
  hoursRead Decimal @default(0.0) // Keep these as running totals
  history History[]
  analytics BlogAnalytics[]    // New relation to analytics
}

model History {
  id Int @id @default(autoincrement())
  blog Blog @relation(fields: [blogID], references:[id])
  blogID Int
  reader User @relation(fields:[authorID], references: [id]) 
  authorID Int
  readAt DateTime
}

model BlogAnalytics {
  id Int @id @default(autoincrement())
  blog Blog @relation(fields: [blogID], references:[id])
  blogID Int
  date DateTime
  views Int @default(0)
  reads Int @default(0)
  totalHoursRead Decimal @default(0.0)
  averageHoursRead Decimal @default(0.0)

  @@unique([blogID, date])    // Ensure one record per blog per date
}